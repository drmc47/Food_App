{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { GET_RECIPES, GET_INFO, CHANGE_PAGE, ORDER_AZ, ORDER_ZA } from '../actions';\nconst initialState = {\n  recipe: [],\n  moreInfo: {},\n  Page: 1,\n  Order: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_RECIPES:\n      return { ...state,\n        recipe: action.payload\n      };\n\n    case GET_INFO:\n      return { ...state,\n        moreInfo: action.payload //moreInfo: state.payload\n\n      };\n\n    case CHANGE_PAGE:\n      return { ...state,\n        Page: state.Page + action.payload\n      };\n\n    case ORDER_AZ:\n      return { ...state,\n        Order: 1\n      };\n\n    case ORDER_ZA:\n      return { ...state,\n        Order: -1\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/drmc47/Desktop/Proyecto/PI-Food/client/src/store/index.js"],"names":["createStore","applyMiddleware","compose","thunk","GET_RECIPES","GET_INFO","CHANGE_PAGE","ORDER_AZ","ORDER_ZA","initialState","recipe","moreInfo","Page","Order","reducer","state","action","type","payload","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,QAA7C,EAAuDC,QAAvD,QAAuE,YAAvE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,IAAI,EAAE,CAHW;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEA,SAAKb,WAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHL,QAAAA,MAAM,EAAEM,MAAM,CAACE;AAFZ,OAAP;;AAKA,SAAKb,QAAL;AACA,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAFd,CAGH;;AAHG,OAAP;;AAKA,SAAKZ,WAAL;AAEA,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACE;AAFvB,OAAP;;AAKA,SAAKX,QAAL;AACA,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAKA,SAAKL,QAAL;AACA,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,KAAK,EAAE,CAAC;AAFL,OAAP;;AAKJ;AACI,aAAOE,KAAP;AAlCJ;AAoCH,CArCD;;AAsCA,MAAMI,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CnB,OAAvE;AACA,MAAMoB,KAAK,GAAGtB,WAAW,CAACc,OAAD,EAAUK,eAAe,CAAClB,eAAe,CAACE,KAAD,CAAhB,CAAzB,CAAzB;AAEA,eAAemB,KAAf","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport { GET_RECIPES, GET_INFO, CHANGE_PAGE, ORDER_AZ, ORDER_ZA } from '../actions'\n\nconst initialState = {\n    recipe: [],\n    moreInfo: {},\n    Page: 1,\n    Order: 0\n    \n    \n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_RECIPES:\n        return {\n            ...state, \n            recipe: action.payload\n        }\n\n        case GET_INFO: \n        return {\n            ...state,\n            moreInfo: action.payload\n            //moreInfo: state.payload\n        }\n        case CHANGE_PAGE: \n\n        return {\n            ...state,\n            Page: state.Page + action.payload\n        }\n\n        case ORDER_AZ: \n        return {\n            ...state, \n            Order: 1\n        }\n\n        case ORDER_ZA: \n        return {\n            ...state,\n            Order: -1\n        }\n\n    default:\n        return state\n    }\n}\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}