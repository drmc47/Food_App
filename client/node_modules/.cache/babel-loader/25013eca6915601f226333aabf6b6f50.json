{"ast":null,"code":"var _jsxFileName = \"/Users/drmc47/Desktop/Proyecto/PI-Food/client/src/components/Detail/Detail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearPage, getInfo } from '../../actions';\nimport Loading from '../Loading/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Detail({\n  location: {\n    search\n  }\n}) {\n  _s();\n\n  let id = search.substring(1);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getInfo(id));\n    return () => {\n      dispatch(clearPage());\n    };\n  }, [dispatch, id]);\n  let moreInfo = useSelector(state => state.moreInfo); // function createInstructions() {\n  //     return {__html: moreInfo.instructions};\n  // }\n\n  if (moreInfo === null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ERROR 404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  if ((moreInfo === null || moreInfo === void 0 ? void 0 : moreInfo.title) !== undefined) {\n    console.log(moreInfo);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: moreInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: moreInfo.image,\n        alt: \"img not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Diet type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: moreInfo.createdInDb ? moreInfo.diets.map((diet, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: diet.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 83\n        }, this)) : moreInfo.diets.map((diet, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: diet\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 154\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Instructions: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), moreInfo.instructions ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: moreInfo.instructions.replace(/(<([^>]+)>)/ig, '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 46\n      }, this) : moreInfo.analyzedInstructions.length ? moreInfo.analyzedInstructions[0].steps.map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: e.step.replace(/(<([^>]+)>)/ig, '')\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 199\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sorry, no instructions available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 256\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this), \"  \", moreInfo.spoonacularScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Healthyness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this), \" \", moreInfo.healthScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Summary: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this), moreInfo.summary.replace(/(<([^>]+)>)/ig, '')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 16\n  }, this);\n}\n\n_s(Detail, \"ODSCGH1QDFpdxmBuPXkyr/1gMK0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Detail;\nexport default Detail; // let instructions = [];\n// let final = [];\n// if (!moreInfo) {return <h1>Cargando...</h1>}\n// if (moreInfo.analyzedInstructions.length) {\n//         for (const property in moreInfo.analyzedInstructions[0].steps) {\n//             instructions.push(moreInfo.analyzedInstructions[0].steps[property])\n//         }\n//         final = instructions.map(e => e.step)\n//     }\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/drmc47/Desktop/Proyecto/PI-Food/client/src/components/Detail/Detail.jsx"],"names":["React","useEffect","useSelector","useDispatch","clearPage","getInfo","Loading","Detail","location","search","id","substring","dispatch","moreInfo","state","title","undefined","console","log","image","createdInDb","diets","map","diet","index","name","instructions","replace","analyzedInstructions","length","steps","e","i","step","spoonacularScore","healthScore","summary"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { clearPage, getInfo } from '../../actions'\nimport Loading from '../Loading/Loading';\n\n\nfunction Detail({location: {search}}) {\n    let id = search.substring(1);\n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n        dispatch(getInfo(id));\n        return () => {\n            dispatch(clearPage())\n\n        }\n    }, [dispatch, id]) \n    let moreInfo = useSelector(state => state.moreInfo) \n\n   \n    // function createInstructions() {\n    //     return {__html: moreInfo.instructions};\n    // }\n    if(moreInfo === null) {\n        return <h1>ERROR 404</h1>\n    }\n    \n    if (moreInfo?.title!==undefined) {\n        console.log(moreInfo)\n        return (\n            <div>\n                    \n                    <h2>{moreInfo.title}</h2>\n                    <img src={moreInfo.image} alt=\"img not found\" />\n                    <h3>Diet type</h3>\n                    <p>{moreInfo.createdInDb ? moreInfo.diets.map((diet, index)=> <li key={index}>{diet.name}</li>) : moreInfo.diets.map((diet, index)=> <li key={index}>{diet}</li>)}</p> \n                    <h3><b>Instructions: </b></h3>\n                    {moreInfo.instructions ? <p>{moreInfo.instructions.replace(/(<([^>]+)>)/ig,'')}</p> : (moreInfo.analyzedInstructions.length  ? moreInfo.analyzedInstructions[0].steps.map((e,i)=> <li key={i}>{e.step.replace(/(<([^>]+)>)/ig,'')}</li>) : <p>Sorry, no instructions available</p>)}\n                    {/* <div dangerouslySetInnerHTML={createInstructions()}></div>  */}\n                    <p><b>Score</b>  {moreInfo.spoonacularScore}</p>\n                    <p><b>Healthyness</b> {moreInfo.healthScore}</p>\n                    <p><b>Summary: </b>{moreInfo.summary.replace(/(<([^>]+)>)/ig,'')}</p>\n                </div>\n            )\n    }   \n    \n        return <Loading/>\n        \n        \n    }\n    \n    export default Detail\n    \n\n    // let instructions = [];\n    // let final = [];\n\n    // if (!moreInfo) {return <h1>Cargando...</h1>}\n    // if (moreInfo.analyzedInstructions.length) {\n    //         for (const property in moreInfo.analyzedInstructions[0].steps) {\n    //             instructions.push(moreInfo.analyzedInstructions[0].steps[property])\n    //         }\n            \n    //         final = instructions.map(e => e.step)\n    \n    //     }"]},"metadata":{},"sourceType":"module"}