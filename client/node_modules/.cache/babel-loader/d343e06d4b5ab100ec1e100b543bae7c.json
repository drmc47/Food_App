{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { GET_RECIPES, GET_INFO, CHANGE_PAGE, ORDER_AZ, FILTER_DIET, SEARCH_RECIPE, ORDER_SCORE, GET_DIETS } from '../actions';\nconst initialState = {\n  recipe: [],\n  diets: [],\n  moreInfo: {},\n  Page: 1,\n  Order: 0,\n  Score: 0,\n  filtered: '',\n  search: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_RECIPES:\n      return { ...state,\n        recipe: action.payload\n      };\n\n    case GET_DIETS:\n      return { ...state,\n        diets: action.payload\n      };\n\n    case GET_INFO:\n      return { ...state,\n        moreInfo: action.payload\n      };\n\n    case CHANGE_PAGE:\n      return { ...state,\n        Page: state.Page + action.payload\n      };\n\n    case ORDER_AZ:\n      return { ...state,\n        Order: action.payload\n      };\n\n    case ORDER_SCORE:\n      return { ...state,\n        Score: action.payload\n      };\n\n    case FILTER_DIET:\n      return { ...state,\n        //filtered: state.recipe.filter(e=> e.diets.includes(action.payload))\n        filtered: action.payload\n      };\n\n    case SEARCH_RECIPE:\n      return { ...state,\n        search: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/drmc47/Desktop/Proyecto/PI-Food/client/src/store/index.js"],"names":["createStore","applyMiddleware","compose","thunk","GET_RECIPES","GET_INFO","CHANGE_PAGE","ORDER_AZ","FILTER_DIET","SEARCH_RECIPE","ORDER_SCORE","GET_DIETS","initialState","recipe","diets","moreInfo","Page","Order","Score","filtered","search","reducer","state","action","type","payload","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,QAA7C,EAAuDC,WAAvD,EAAoEC,aAApE,EAAmFC,WAAnF,EAAgGC,SAAhG,QAAiH,YAAjH;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,KAAK,EAAC,EAFW;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,IAAI,EAAE,CAJW;AAKjBC,EAAAA,KAAK,EAAE,CALU;AAMjBC,EAAAA,KAAK,EAAE,CANU;AAOjBC,EAAAA,QAAQ,EAAE,EAPO;AAQjBC,EAAAA,MAAM,EAAE;AARS,CAArB;;AAaA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEA,SAAKpB,WAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHT,QAAAA,MAAM,EAAEU,MAAM,CAACE;AAFZ,OAAP;;AAMA,SAAKd,SAAL;AACA,aAAO,EACH,GAAGW,KADA;AAEHR,QAAAA,KAAK,EAAES,MAAM,CAACE;AAFX,OAAP;;AAKA,SAAKpB,QAAL;AACA,aAAO,EACH,GAAGiB,KADA;AAEHP,QAAAA,QAAQ,EAAEQ,MAAM,CAACE;AAFd,OAAP;;AAIA,SAAKnB,WAAL;AAEA,aAAO,EACH,GAAGgB,KADA;AAEHN,QAAAA,IAAI,EAAEM,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACE;AAFvB,OAAP;;AAKA,SAAKlB,QAAL;AACA,aAAO,EACH,GAAGe,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFX,OAAP;;AAMA,SAAKf,WAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAFX,OAAP;;AAMJ,SAAKjB,WAAL;AACA,aAAM,EACF,GAAGc,KADD;AAEF;AACAH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAHf,OAAN;;AAOA,SAAKhB,aAAL;AACA,aAAO,EACH,GAAGa,KADA;AAEHF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAFZ,OAAP;;AAKJ;AACI,aAAOH,KAAP;AAxDJ;AA0DH,CA3DD;;AA4DA,MAAMI,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C1B,OAAvE;AACA,MAAM2B,KAAK,GAAG7B,WAAW,CAACqB,OAAD,EAAUK,eAAe,CAACzB,eAAe,CAACE,KAAD,CAAhB,CAAzB,CAAzB;AAEA,eAAe0B,KAAf","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport { GET_RECIPES, GET_INFO, CHANGE_PAGE, ORDER_AZ, FILTER_DIET, SEARCH_RECIPE, ORDER_SCORE, GET_DIETS } from '../actions'\n\nconst initialState = {\n    recipe: [],\n    diets:[],\n    moreInfo: {},\n    Page: 1,\n    Order: 0,\n    Score: 0,\n    filtered: '',\n    search: ''\n    \n    \n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_RECIPES:\n        return {\n            ...state, \n            recipe: action.payload,\n            \n           \n        }\n        case GET_DIETS: \n        return {\n            ...state,\n            diets: action.payload\n        }\n\n        case GET_INFO: \n        return {\n            ...state,\n            moreInfo: action.payload\n        }\n        case CHANGE_PAGE: \n\n        return {\n            ...state,\n            Page: state.Page + action.payload\n        }\n\n        case ORDER_AZ: \n        return {\n            ...state, \n            Order: action.payload,\n           \n        }\n\n        case ORDER_SCORE:\n            return {\n                ...state,\n                Score: action.payload\n            }\n\n    \n        case FILTER_DIET: \n        return{ \n            ...state,\n            //filtered: state.recipe.filter(e=> e.diets.includes(action.payload))\n            filtered: action.payload\n            \n        }\n\n        case SEARCH_RECIPE: \n        return {\n            ...state,\n            search: action.payload\n        }\n\n    default:\n        return state\n    }\n}\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}