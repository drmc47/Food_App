{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { GET_RECIPES, GET_INFO, CHANGE_PAGE, ORDER_AZ, FILTER_GLUTEN, SEARCH_RECIPE } from '../actions';\nconst initialState = {\n  recipe: [],\n  moreInfo: {},\n  Page: 1,\n  Order: 0,\n  filtered: [],\n  search: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_RECIPES:\n      return { ...state,\n        recipe: action.payload,\n        filtered: action.payload\n      };\n\n    case GET_INFO:\n      return { ...state,\n        moreInfo: action.payload //moreInfo: state.payload\n\n      };\n\n    case CHANGE_PAGE:\n      return { ...state,\n        Page: state.Page + action.payload\n      };\n\n    case ORDER_AZ:\n      return { ...state,\n        Order: action.payload\n      };\n\n    case FILTER_GLUTEN:\n      return { ...state,\n        filtered: state.recipe.filter(e => e.diets.includes(action.payload))\n      };\n\n    case SEARCH_RECIPE:\n      return { ...state,\n        filtered: state.filtered.includes(action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/drmc47/Desktop/Proyecto/PI-Food/client/src/store/index.js"],"names":["createStore","applyMiddleware","compose","thunk","GET_RECIPES","GET_INFO","CHANGE_PAGE","ORDER_AZ","FILTER_GLUTEN","SEARCH_RECIPE","initialState","recipe","moreInfo","Page","Order","filtered","search","reducer","state","action","type","payload","filter","e","diets","includes","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,QAA7C,EAAuDC,aAAvD,EAAsEC,aAAtE,QAA2F,YAA3F;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,IAAI,EAAE,CAHW;AAIjBC,EAAAA,KAAK,EAAE,CAJU;AAKjBC,EAAAA,QAAQ,EAAE,EALO;AAMjBC,EAAAA,MAAM,EAAE;AANS,CAArB;;AAWA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEA,SAAKhB,WAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHP,QAAAA,MAAM,EAAEQ,MAAM,CAACE,OAFZ;AAGHN,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAHd,OAAP;;AAOA,SAAKhB,QAAL;AACA,aAAO,EACH,GAAGa,KADA;AAEHN,QAAAA,QAAQ,EAAEO,MAAM,CAACE,OAFd,CAGH;;AAHG,OAAP;;AAKA,SAAKf,WAAL;AAEA,aAAO,EACH,GAAGY,KADA;AAEHL,QAAAA,IAAI,EAAEK,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACE;AAFvB,OAAP;;AAKA,SAAKd,QAAL;AACA,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAFX,OAAP;;AAMA,SAAKb,aAAL;AACA,aAAM,EACF,GAAGU,KADD;AAEFH,QAAAA,QAAQ,EAAEG,KAAK,CAACP,MAAN,CAAaW,MAAb,CAAoBC,CAAC,IAAGA,CAAC,CAACC,KAAF,CAAQC,QAAR,CAAiBN,MAAM,CAACE,OAAxB,CAAxB;AAFR,OAAN;;AAKA,SAAKZ,aAAL;AACA,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeU,QAAf,CAAwBN,MAAM,CAACE,OAA/B;AAFP,OAAP;;AAIJ;AACI,aAAOH,KAAP;AA1CJ;AA4CH,CA7CD;;AA8CA,MAAMQ,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C1B,OAAvE;AACA,MAAM2B,KAAK,GAAG7B,WAAW,CAACiB,OAAD,EAAUS,eAAe,CAACzB,eAAe,CAACE,KAAD,CAAhB,CAAzB,CAAzB;AAEA,eAAe0B,KAAf","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport { GET_RECIPES, GET_INFO, CHANGE_PAGE, ORDER_AZ, FILTER_GLUTEN, SEARCH_RECIPE } from '../actions'\n\nconst initialState = {\n    recipe: [],\n    moreInfo: {},\n    Page: 1,\n    Order: 0,\n    filtered: [],\n    search: ''\n    \n    \n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_RECIPES:\n        return {\n            ...state, \n            recipe: action.payload,\n            filtered: action.payload\n           \n        }\n\n        case GET_INFO: \n        return {\n            ...state,\n            moreInfo: action.payload\n            //moreInfo: state.payload\n        }\n        case CHANGE_PAGE: \n\n        return {\n            ...state,\n            Page: state.Page + action.payload\n        }\n\n        case ORDER_AZ: \n        return {\n            ...state, \n            Order: action.payload\n        }\n\n    \n        case FILTER_GLUTEN: \n        return{ \n            ...state,\n            filtered: state.recipe.filter(e=> e.diets.includes(action.payload))\n        }\n\n        case SEARCH_RECIPE: \n        return {\n            ...state,\n            filtered: state.filtered.includes(action.payload)\n        }\n    default:\n        return state\n    }\n}\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}